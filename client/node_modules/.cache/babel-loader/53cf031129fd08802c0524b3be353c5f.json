{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sujungchoi/Desktop/\\uD83D\\uDC69\\u200D\\uD83D\\uDCBBCodingDojo/MERN/Full_Stack_MERN/product_manager/client/src/views/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ProductForm from '../components/ProductForm';\nimport ProductList from '../components/ProductList'; // eslint-disable-next-line\n\nexport default _s(() => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/products\") // .then(res=>setProducts(res.data.products)) if res.json({products: allProducts}) instead of getting it as an array from controller\n    .then(res => setProducts(res.data)).catch(err => console.log(\"Error: \", err));\n  }, []);\n\n  const removeFromDom = productId => {\n    setProducts(products.filter(prod => prod._id != productId));\n  };\n\n  const addToDom = productId => {\n    setProducts(products.map((value, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", setProducts, \" \"]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this);\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Product Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductForm, {\n      products: products,\n      setProducts: setProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n      products: products,\n      removeFromDom: removeFromDom,\n      addToDom: addToDom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}, \"Of75wLl7oFZkZ1AGF2Dj3fIBhOY=\");","map":{"version":3,"sources":["/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/product_manager/client/src/views/Main.js"],"names":["React","useEffect","useState","axios","ProductForm","ProductList","products","setProducts","get","then","res","data","catch","err","console","log","removeFromDom","productId","filter","prod","_id","addToDom","map","value","idx"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAGA;;AACA,kBAAe,MAAM;AAAA;;AACjB,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVE,IAAAA,KAAK,CAACK,GAAN,CAAU,oCAAV,EACI;AADJ,KAEKC,IAFL,CAEUC,GAAG,IAAEH,WAAW,CAACG,GAAG,CAACC,IAAL,CAF1B,EAGKC,KAHL,CAGWC,GAAG,IAAEC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB,CAHhB;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMG,aAAa,GAAGC,SAAS,IAAI;AAC/BV,IAAAA,WAAW,CAACD,QAAQ,CAACY,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,GAAL,IAAYH,SAApC,CAAD,CAAX;AACH,GAFD;;AAIA,QAAMI,QAAQ,GAAGJ,SAAS,IAAI;AAC1BV,IAAAA,WAAW,CAACD,QAAQ,CAACgB,GAAT,CAAa,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACrC,0BAAO;AAAA,wBAAgBjB,WAAhB;AAAA,SAASiB,GAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFW,CAAD,CAAX;AAIH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAElB,QAAvB;AAAiC,MAAA,WAAW,EAAEC;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAED,QAAvB;AAAiC,MAAA,aAAa,EAAEU,aAAhD;AAA+D,MAAA,QAAQ,EAAEK;AAAzE;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA5BD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport ProductForm from '../components/ProductForm'\nimport ProductList from '../components/ProductList';\n\n\n// eslint-disable-next-line\nexport default () => {\n    const [ products, setProducts ] = useState([]);\n\n    useEffect(()=>{\n        axios.get(\"http://localhost:8000/api/products\")\n            // .then(res=>setProducts(res.data.products)) if res.json({products: allProducts}) instead of getting it as an array from controller\n            .then(res=>setProducts(res.data))  \n            .catch(err=>console.log(\"Error: \", err))     \n    }, [])\n\n    const removeFromDom = productId => {\n        setProducts(products.filter(prod => prod._id != productId));\n    }\n    \n    const addToDom = productId => {\n        setProducts(products.map((value, idx) => {\n            return <h3 key={idx}> {setProducts} </h3>\n        }\n        ))\n    }\n\n    return (\n        <div className=\"mainForm\">\n            <h2>Product Manager</h2>\n            <ProductForm products={products} setProducts={setProducts} />\n            <ProductList products={products} removeFromDom={removeFromDom} addToDom={addToDom} />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}